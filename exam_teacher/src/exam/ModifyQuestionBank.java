/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package exam;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author XII Info
 */
public class ModifyQuestionBank extends javax.swing.JFrame {

    DBConnection d = new DBConnection();
    DefaultTableModel tableModel;
    Connection con;
    String[] clas;
    String teacherId, selectedSubject, selectedClass, selectedChapter,name;
    ResultSet rs;
    PreparedStatement ps,ps2;

    public ModifyQuestionBank(String teacherId, String[] Clas,String name) {
        try {
            initComponents();
            this.teacherId = teacherId;
            this.name = name;
            this.clas = Clas;
            con = d.DB_Connection();
            tableModel = (DefaultTableModel) questions_TBL.getModel();
            class_CB.addItem("Choose Class");
            for (String i : Clas) {
                if (i == null) {
                    break;
                }
                class_CB.addItem(i);
            }

        } catch (SQLException ex) {
            Logger.getLogger(ModifyQuestionBank.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        questions_TBL = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        class_CB = new javax.swing.JComboBox();
        subject_CB = new javax.swing.JComboBox();
        chapter_CB = new javax.swing.JComboBox();
        saveQuestions_BTN = new javax.swing.JButton();
        back_BTN = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        nameLBL = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowIconified(java.awt.event.WindowEvent evt) {
                formWindowIconified(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        questions_TBL.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        questions_TBL.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "QuestionID", "Question", "Option A", "Option B", "Option C", "Option D", "Answer Option", "Remove"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        questions_TBL.setRowHeight(20);
        jScrollPane1.setViewportView(questions_TBL);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Class");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Subject");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Chapter Name");

        class_CB.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        class_CB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                class_CBActionPerformed(evt);
            }
        });

        subject_CB.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        subject_CB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subject_CBActionPerformed(evt);
            }
        });

        chapter_CB.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        chapter_CB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chapter_CBActionPerformed(evt);
            }
        });

        saveQuestions_BTN.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        saveQuestions_BTN.setText("Save Questions");
        saveQuestions_BTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveQuestions_BTNActionPerformed(evt);
            }
        });

        back_BTN.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        back_BTN.setText("Back");
        back_BTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                back_BTNActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel4.setText("Modify Question Bank");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(class_CB, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(subject_CB, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(chapter_CB, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(nameLBL, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(310, 310, 310)
                        .addComponent(jLabel4)
                        .addGap(327, 327, 327)
                        .addComponent(back_BTN, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(457, 457, 457)
                .addComponent(saveQuestions_BTN, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {chapter_CB, class_CB, saveQuestions_BTN, subject_CB});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(back_BTN, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                        .addComponent(jLabel4))
                    .addComponent(nameLBL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(class_CB, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(subject_CB, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chapter_CB, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 338, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(saveQuestions_BTN, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {back_BTN, chapter_CB, class_CB, saveQuestions_BTN, subject_CB});

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        nameLBL.setText(name);
        TableColumn column = null;
        column = questions_TBL.getColumnModel().getColumn(1);
        column.setPreferredWidth(200);
class_CB.requestFocus();
    }//GEN-LAST:event_formWindowOpened

    private void formWindowIconified(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowIconified
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowIconified

    private void class_CBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_class_CBActionPerformed
        subject_CB.removeAllItems();
        subject_CB.addItem("Choose Subject");
        try {
            selectedClass = (String) class_CB.getSelectedItem();
            ps = con.prepareStatement("Select distinct subject from teachersubject where TeacherID=? and Class=?");
            ps.setString(1, teacherId);
            ps.setString(2, selectedClass);
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                subject_CB.addItem(rs.getString("subject"));
            }
        } catch (SQLException ex) {
            Logger.getLogger(CreateQuestionPaper.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_class_CBActionPerformed

    private void subject_CBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subject_CBActionPerformed
        chapter_CB.removeAllItems();
        chapter_CB.addItem("Choose Chapter");
        if (subject_CB.getSelectedIndex() == 0) {
            return;
        }
        try {

            selectedSubject = (String) subject_CB.getSelectedItem();
            ResultSet rs;
            ps = con.prepareStatement("Select ChapterName from classchapters where class=? and subject=?");
            ps.setString(1, selectedClass);
            ps.setString(2, selectedSubject);
            rs = ps.executeQuery();
            for (int i = 0; rs.next(); i++) {
                chapter_CB.addItem(rs.getString("ChapterName"));
            }
        } catch (SQLException ex) {
            Logger.getLogger(AddQuestions.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_subject_CBActionPerformed

    private void saveQuestions_BTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveQuestions_BTNActionPerformed
        int count = tableModel.getRowCount();
        int success = 0;
        for (int k = 0; k < count; k++) {
            try {
                int id = (int) tableModel.getValueAt(k, 0);
                String qstn = (String) tableModel.getValueAt(k, 1);
                String a = (String) tableModel.getValueAt(k, 2);
                String b = (String) tableModel.getValueAt(k, 3);
                String c = (String) tableModel.getValueAt(k, 4);
                String d = (String) tableModel.getValueAt(k, 5);
                String ans = (String) tableModel.getValueAt(k, 6);

                ps2 = con.prepareStatement("Update questionbank set Question=?, OptionA=?, OptionB=?, OptionC=?, OptionD=?, AnswerOption=? where QuestionID=?");
                ps2.setString(1, qstn);
                ps2.setString(2, a);
                ps2.setString(3, b);
                ps2.setString(4, c);
                ps2.setString(5, d);
                ps2.setString(6, ans);
                ps2.setInt(7, id);
                success = ps2.executeUpdate();
                boolean deleteQstn = (boolean) tableModel.getValueAt(k, 7);
                if (deleteQstn == true) {
                    ps2 = con.prepareStatement("delete from questionbank where questionId=?");
                    ps2.setInt(1,(int)tableModel.getValueAt(k, 0));
                    ps2.executeUpdate();
                }
            } catch (SQLException ex) {
                Logger.getLogger(ModifyQuestionBank.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if (success == 1) {
            JOptionPane.showMessageDialog(this, "Changes have been saved!!!");
        }
        clear();
        class_CB.setSelectedIndex(0);
        subject_CB.setSelectedIndex(0);
        chapter_CB.setSelectedIndex(0);
    }//GEN-LAST:event_saveQuestions_BTNActionPerformed

    public void clear() {
        int rowsInTable = tableModel.getRowCount();
        for (int i = 0; i < rowsInTable; i++) {
            tableModel.removeRow(i);
            rowsInTable--;
            i--;
        }
    }
    private void back_BTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_back_BTNActionPerformed
        try {
            Home m = new Home(teacherId);
            this.setVisible(false);
            m.setVisible(true);
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(CreateQuestionPaper.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_back_BTNActionPerformed

    private void chapter_CBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chapter_CBActionPerformed
        tableModel.setRowCount(0);
        selectedSubject = (String) subject_CB.getSelectedItem();
        selectedClass = (String) class_CB.getSelectedItem();
        selectedChapter = (String) chapter_CB.getSelectedItem();
        try {
            ps=con.prepareStatement("Select * from questionbank where Class=? and Subject=? and ChapterName=?");
            ps.setString(1, selectedClass);
            ps.setString(2, selectedSubject);
            ps.setString(3, selectedChapter);
            rs=ps.executeQuery();
            while (rs.next()) {
                tableModel.addRow(new Object[]{
                    rs.getInt("QuestionID"),
                    rs.getString("Question"),
                    rs.getString("OptionA"),
                    rs.getString("OptionB"),
                    rs.getString("OptionC"),
                    rs.getString("OptionD"),
                    rs.getString("AnswerOption"), false

                });
            }
        } catch (SQLException ex) {
            Logger.getLogger(ModifyQuestionBank.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_chapter_CBActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        try {
            con.close();
            ps.close();
            ps2.close();
        } catch (SQLException ex) {
            Logger.getLogger(EditChapters.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formWindowClosed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ModifyQuestionBank.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ModifyQuestionBank.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ModifyQuestionBank.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ModifyQuestionBank.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back_BTN;
    private javax.swing.JComboBox chapter_CB;
    private javax.swing.JComboBox class_CB;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel nameLBL;
    private javax.swing.JTable questions_TBL;
    private javax.swing.JButton saveQuestions_BTN;
    private javax.swing.JComboBox subject_CB;
    // End of variables declaration//GEN-END:variables
}
